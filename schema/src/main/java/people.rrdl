@doc {
  title: "People API"
  description: "
    A nice long description:

    * With
    * Some
    * Bullet points.
  "
  version: "1.0.0"
}
specification people {
  type name : string ^[\p{Alpha}']+$ length [1..100]
  type uuid : string ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$ length [36..36]
  type age : int[0..150]
  type months-employed : int[0..1000]
  type error-code: string ^[a-zA-Z0-9_]+$ length [1..20]
  type error-message: string ^(?s).+$ length [1..10000]

  class address {
    id: uuid
  }

  class person {
    first-name : name
    last-name : name | empty
    age : age
    employed : boolean
    months-employed : months-employed | null
    work-address: address | null
    home-address: address
    address-history : address[]
  }

  class error {
  	error-code: error-code
  	error-message: error-message
  }

  response get-person-list-success : ok person[]

  response get-person-success : ok person

  response update-person-success : ok person

  response server-error : internal-server-error error

  response invalid-request : bad-request error

  path /person : person-ws {

	get -> get-person-list() : get-person-list-success | server-error

  	path /{id: uuid} {
    	get -> get-person(id = /id) : get-person-success | invalid-request | server-error

    	put -> update-person(id = /id, person = *person) : update-person-success | invalid-request | server-error
  	}
  }
}
